import{_ as e,c as t,o as a,N as r}from"./chunks/framework.4fa43063.js";const f=JSON.parse('{"title":"SWR Vue","description":"","frontmatter":{},"headers":[],"relativePath":"introduction.md","lastUpdated":1681257585000}'),i={name:"introduction.md"},o=r('<h1 id="swr-vue" tabindex="-1">SWR Vue <a class="header-anchor" href="#swr-vue" aria-label="Permalink to &quot;SWR Vue&quot;">​</a></h1><blockquote><p>This project is inspired by the awesome work <a href="https://swr.vercel.app/pt-BR" target="_blank" rel="noreferrer">vercel/swr</a></p></blockquote><p>SWR derives from <code>stale-while-revalidate</code>, a HTTP cache technique. This technique consists in first return the data cached(stale), after send a request(revalidate) and finaly return the newly data.</p><blockquote><p>You can read more about this <a href="https://web.dev/stale-while-revalidate/" target="_blank" rel="noreferrer">here</a></p></blockquote><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Fast and reusable data fetching</li><li>Typescript friendly</li><li>Protocol agnostic</li><li>Request lib agnostic</li><li>Integrated cache</li><li>Optimistic UI</li><li>Request deduplication</li><li>Revalidation on focus and network recovery</li><li>Polling</li><li>Configurable</li></ul><h2 id="comunity" tabindex="-1">Comunity <a class="header-anchor" href="#comunity" aria-label="Permalink to &quot;Comunity&quot;">​</a></h2><p>Feel free to join us to contribute or ask doubts in <a href="https://github.com/edumudu/swr-vue/discussions" target="_blank" rel="noreferrer">Github discussions</a></p>',8),s=[o];function l(n,c,u,d,h,p){return a(),t("div",null,s)}const b=e(i,[["render",l]]);export{f as __pageData,b as default};
